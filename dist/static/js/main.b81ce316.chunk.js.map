{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignedIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/projects/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toDateString","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignedIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","catch","err","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b81ce316.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/createproject\">Create Blog Post</NavLink>\r\n            </li>\r\n            <li>\r\n                <button onClick={props.signOut}>Log Out</button>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating lighten-2\">\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => {\r\n            dispatch(signOut());\r\n        }\r\n    };\r\n};\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"LOGIN_SUCCESS\"\r\n                });\r\n                // .catch(err => {\r\n                //     console.log(\"working in action, dispatch\");\r\n                //     dispatch({\r\n                //         type: \"LOGIN_ERROR\",\r\n                //         err\r\n                //     });\r\n                // });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"LOGOUT_SUCCESS\"\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then(resp => {\r\n                return firestore\r\n                    .collection(\"users\")\r\n                    .doc(resp.user.uid)\r\n                    .set({\r\n                        firstname: newUser.firstname,\r\n                        lastname: newUser.lastname,\r\n                        initials: newUser.firstname[0] + newUser.lastname[0]\r\n                    })\r\n                    .then(() => {\r\n                        dispatch({\r\n                            type: \"SIGNUP_SUCCESS\"\r\n                        });\r\n                    })\r\n                    .catch(err => {\r\n                        dispatch({\r\n                            type: \"SIGNUP_FAILED\",\r\n                            err\r\n                        });\r\n                    });\r\n            });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Log In</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n    console.log(props);\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? (\r\n        <SignedInLinks profile={profile} />\r\n    ) : (\r\n        <SignedOutLinks />\r\n    );\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-4\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"Brand-Logo\">\r\n                    Kudzi's Blog\r\n                </Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n    const { notifications } = props;\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul>\r\n                        {notifications &&\r\n                            notifications.map(item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <span className=\" blue-text\">\r\n                                            {item.user}\r\n                                        </span>\r\n                                        <span>{item.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(\r\n                                                item.time.toDate()\r\n                                            ).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>\r\n                        Posted By author {project.authorFirstName}\r\n                        {project.authorLastName}\r\n                    </p>\r\n                    <p className=\"grey-text\">\r\n                        Created At {project.createdAt.toDate().toDateString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects &&\r\n                projects.map(project => {\r\n                    return (\r\n                        <Link to={\"/project/\" + project.id} key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to={\"/signin\"} />;\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s5 offset m-1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: \"projects\", limit: 3, orderBy: [\"createdAt\", \"desc\"] },\r\n        { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n    ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to={\"/signin\"} />;\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">\r\n                            {\" \"}\r\n                            Project Title-{project.title}\r\n                        </span>\r\n                        <p>Content:{project.content}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\" card action grey lighten-4 grey text\">\r\n                    <div>\r\n                        Posted by:{project.authorFirstName}{\" \"}\r\n                        {project.authorLastName}{\" \"}\r\n                    </div>\r\n                    <div>\r\n                        Posted on: {project.createdAt.toDate().toDateString()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={\"container center\"}>\r\n                <p> Loading Projects...</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignedIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    };\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to={\"/\"} />;\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"silver text text-darken-3\"> Sign In </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue-lighten-4 z-depth-0\">\r\n                            Login\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: creds => dispatch(signIn(creds))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignedIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\"\r\n    };\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n        // console.log(this.state);\r\n    };\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to={\"/\"} />;\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"silver text text-darken-3\"> Sign Up </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstname\">Firstname</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"firstname\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastname\">Lastname</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"lastname\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue-lighten-4 z-depth-0\">\r\n                            Sign Up\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"./projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content: \"\"\r\n    };\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push(\"/\");\r\n    };\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to={\"/signin\"} />;\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"White\">\r\n                    <h5 className=\"silver text text-darken-3\">Create Blog</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Blog Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Blog Content</label>\r\n                        <textarea\r\n                            className=\"materialize text-area\"\r\n                            type=\"text\"\r\n                            id=\"content\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue-lighten-4 z-depth-0\">\r\n                            Create Blog\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: project => dispatch(createProject(project))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //async function to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore\r\n            .collection(\"projects\")\r\n            .add({\r\n                ...project,\r\n                authorFirstName: profile.firstname,\r\n                authorLastName: profile.lastname,\r\n                authorId: authorId,\r\n                createdAt: new Date()\r\n            })\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"CREATE_PROJECT\",\r\n                    project: project\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: \"CREATE_PROJECT_ERROR\",\r\n                    err\r\n                });\r\n            });\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignedIn from \"./components/auth/SignedIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar />\n                    <Switch>\n                        <Route exact path=\"/\" component={Dashboard} />\n                        <Route path=\"/signin\" component={SignedIn} />\n                        <Route path=\"/signup\" component={SignUp} />\n                        <Route\n                            path=\"/createproject\"\n                            component={CreateProject}\n                        />\n\n                        <Route\n                            exact\n                            path=\"/project/:id\"\n                            component={ProjectDetails}\n                        />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            console.log(\"login error\");\r\n            return {\r\n                ...state,\r\n                authError: \"login Failed\"\r\n            };\r\n\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"login successful\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case \"LOGOUT_SUCCESS\":\r\n            console.log(\" log out successful\");\r\n            return state;\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log(\"signUp success\");\r\n            return { ...state, authError: null };\r\n        case \"SIGNUP_FAILED\":\r\n            console.log(\"signup failed\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n    projects: [\r\n        { id: \"1\", title: \"Petition\", content: \"handlebars\" },\r\n        { id: \"2\", title: \"Socialnetwork\", content: \"React\" },\r\n        { id: \"3\", title: \"Malmö rugby Website\", content: \"handlebars\" }\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log(\"created project\", action.project);\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log(\"created project error\", action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyDhxdnmXEsUY9mJhunNMYXmvltghWUlhgo\",\r\n    authDomain: \"my-react-app-d3931.firebaseapp.com\",\r\n    databaseURL: \"https://my-react-app-d3931.firebaseio.com\",\r\n    projectId: \"my-react-app-d3931\",\r\n    storageBucket: \"my-react-app-d3931.appspot.com\",\r\n    messagingSenderId: \"473814473020\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {\n            useFirestoreForProfile: true,\n            userProfile: \"users\",\n            attachAuthIsReady: true\n        })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById(\"root\")\n    );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}